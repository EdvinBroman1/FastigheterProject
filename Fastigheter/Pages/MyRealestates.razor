@page "/myrealestates"
@inject RealEstateService Service
@using System.Security.Claims
@using Data.Services
@using TeamRedzFastigheter.Shared.Models.RealEstateModel
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContext

@attribute [Authorize]
<div class="main">
    @if (Realestates == null)
    {
        <text>Laddar...</text>
    }
    else if (!Realestates.Any())
    {
        <h2>Du har inte lagt upp några fastigheter</h2>
        <a class="btn btn-success" href="UploadRealestate">Lägg upp din fastighet</a>
    }
    else
    {
        <AuthorizeView>
            <h1>@Username 's Fastigheter</h1>
        </AuthorizeView>
        <div class="list-group orders-list">
            @foreach (var item in Realestates)
            {
                <div class="list-group-item">
                    <div class="col">
                        <h5>@item.AdCreated</h5>
                        Titel
                        <strong>@item.Title</strong>
                        Beskrivning
                        <strong>@item.Description</strong>
                    </div>
                    <div class="col">
                        Pris: <strong>@item.PurchasePrice kr</strong>
                    </div>
                    <div class="col flex-grow-0">
                        <a href="myrealestates/@item.Id" class="btn btn-dark">
                            Hantera
                        </a>
                    </div>
                </div>
            }
        </div>
    }
</div>


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    string Username = string.Empty;
    RealEstateDto[] Realestates;
    protected override async Task OnParametersSetAsync()
    {
        var authstate = await AuthState;
        Username = authstate.User.Claims.FirstOrDefault(x => x.Type.Equals("unique_name", StringComparison.OrdinalIgnoreCase))?.Value;
        Realestates = await Service.GetRealEstatesByUserName(Username);
    }
}