@using TeamRedzFastigheter.Shared.Models.RealEstateModel
@using TeamRedzFastigheter.Shared.Models.CommentModel
@inject Fastigheter.Data.Services.CommentsService Service
@inject Data.LoggedInData LID
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization;

<div class="dialog-container">
    <div class="dialog">
        <div class="dialog-title">
            <h2>@Realestate.Title</h2>
            @Realestate.Description
        </div>
        <form class="dialog-body">
            <span class="mr-center">
                Pris: <span class="price">@Realestate.PurchasePrice kr<br />@Realestate.Address<br />@Realestate.Description</span>
            </span>
        </form>
        <img class="dialog-image" src="https://i.gyazo.com/aa12d509b2c67f2dbc2bbe8f46b9417d.png" />
        <div class="dialog-buttons">
            <button @onclick="OnCancel" class="btn btn-secondary mr-auto">Cancel</button>
            <button class="btn btn-success ml-auto">Boka visning ></button>
        </div>
        <h3>Kommentarer</h3><br />
        @if (Comments != null)
        {
            @foreach (var comment in Comments)
            {
                <h8>@comment.UserName: @comment.Content</h8><br />
            }
        }
        else
        {
            <h2>Du måste vara inloggad för att se kommentarer..</h2>
        }
    </div>
</div>

@code {
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public RealEstateDto Realestate { get; set; }
    private IEnumerable<CommentDto> Comments;


    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {

        var authstate = await AuthState;

        var token = await LID.GetToken();


        if (token != null)
        {
            Comments = await Service.GetComments(Realestate.Id, token);

        }
    }
}